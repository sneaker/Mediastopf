<?xml version="1.0" encoding="UTF-8"?>

<project default="release" name="MediaStopf" basedir=".">

	<!-- One entry for each directory -->
	<property name="src.dir" location="src" />
	<property name="build.dir" location="bin" />
	<property name="doc.dir" location="javadoc" />
	<property name="lib.dir" location="lib" />
	<property name="test.dir" location="test" />
	<property name="test.build.dir" location="test.bin" />

	<property name="filename" value="mediastopf" />
	<property name="file.client" value="${filename}_client.jar" />
	<property name="file.server" value="${filename}_server.jar" />
	
	<property name="main.class.client" value="ch.nomoresecrets.mediastopf.client.StartClient" />
	<property name="main.class.server" value="ch.nomoresecrets.mediastopf.server.StartServer" />
	<property name="version" value="0.1" />
	
	<property name="file" value="${filename}_tryingsomething.jar" />
	<property name="main.class" value="ch.nomoresecrets.mediastopf.client.StartClient" />
	<property name="release.dir" value="release" />
	<property name="release.jar.file" value="${filename}_${version}.jar" />

	<path id="project.classpath">
		<pathelement location="${build.dir}" />
		<pathelement location="${test.build.dir}" />
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>


	<!-- Build targets -->

	<target name="clean" description="clean up">
		<delete dir="${build.dir}" />
		<delete dir="${test.build.dir}" />
		<delete dir="${doc.dir}" />
	</target>

	<target name="prepare" depends="clean">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${test.build.dir}" />
		<mkdir dir="${doc.dir}" />
	</target>

	<target name="compile" depends="prepare">
		<javac srcdir="${src.dir}" destdir="${build.dir}">
			<classpath refid="project.classpath" />
		</javac>
	</target>

	<target name="compile-tests" depends="compile">
		<javac srcdir="${test.dir}" destdir="${test.build.dir}" optimize="true" debug="true" fork="true">
			<classpath refid="project.classpath" />
		</javac>
	</target>

	<target name="test" depends="compile-tests">
		<junit haltonfailure="true">
			<classpath refid="project.classpath" />
			<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${test.build.dir}" includes="**/*Test.class" />
			</batchtest>

			<!-- <sysproperty key="myEnvironment" value="${envValue}" /> -->
		</junit>
	</target>

	<target name="javadoc" description="generate Javadoc">
		<mkdir dir="${doc.dir}" />
		<javadoc destdir="${doc.dir}" package="true">
			<sourcepath>
				<pathelement location="${src.dir}" />
			</sourcepath>
		</javadoc>
	</target>

	<target name="jar" depends="compile-tests, javadoc" description="create the JAR file">
	  <mkdir dir="${release.dir}" />
		<jar destfile="${release.dir}/${release.jar.file}" basedir="${build.dir}">
		<manifest>
			<attribute name="Main-Class" value="${main.class}" />
		</manifest>
	  </jar>
	</target>

	<target name="release" depends="jar, javadoc" description="pack in a zip file">
		<zip file="${release.dir}/${filename}_${version}.zip" level="9">
			<zipfileset dir=".">
				<exclude name="**/.*" />
				<include name="${file}" />
				<include name="mediastopf_client.sh" />
				<include name="mediastopf_server.sh" />
				<include name="javadoc/**" />
				<include name="lib/**" />
				<include name="src/**" />
				<include name="build.xml" />
				<include name="Documentation/**" />
			</zipfileset>
		</zip>
	</target>
</project>
